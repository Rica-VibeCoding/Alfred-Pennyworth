{
  "permissions": {
    "allow": [
      "WebSearch",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:www.bypeople.com)",
      "WebFetch(domain:chat.openai.com)",
      "WebFetch(domain:web.whatsapp.com)",
      "WebFetch(domain:chatgpt.com)",
      "WebFetch(domain:green-api.com)",
      "WebFetch(domain:intuitionlabs.ai)",
      "WebFetch(domain:nzbin.github.io)",
      "WebFetch(domain:web.dev)",
      "WebFetch(domain:ishadeed.com)",
      "WebFetch(domain:bricxlabs.com)",
      "WebFetch(domain:octet.design)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:samuelkraft.com)",
      "WebFetch(domain:stephanwagner.me)",
      "WebFetch(domain:css-loaders.com)",
      "Bash(curl:*)",
      "Bash(npx n8n-mcp:*)",
      "WebFetch(domain:www.npmjs.com)",
      "Read(//mnt/c/Users/ricar/OneDrive/Documentos/ShareX/Screenshots/2025-10/**)",
      "Read(//mnt/c/Users/ricar/Projetos/**)",
      "Bash(awk:*)",
      "Bash(tree:*)",
      "Bash(du:*)",
      "Bash(ls:*)",
      "Bash(stat:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nInitial commit - Alfred PWA production-ready\n\nAssistente pessoal N8N com interface web minimalista.\n\nFeatures implementadas:\n- Interface de chat responsiva (mobile-first)\n- Input por texto e voz (Web Speech API)\n- Integração N8N via webhook (retry + timeout)\n- Histórico persistente (LocalStorage)\n- PWA completo (Service Worker + manifest)\n- Tratamento de erros e estados offline\n- Performance otimizada (36KB bundle)\n\nStack: HTML + CSS + JavaScript puro (zero frameworks)\nTarget: iPhone 11 (Safari)\nDeploy: Vercel\n\nFases 0-9B concluídas.\nPróximo: Gerar ícones PWA e deploy.\nEOF\n)\")",
      "Bash(git config:*)",
      "Bash(cat:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)",
      "Read(//home/ricar/**)",
      "Bash(ssh-keygen:*)",
      "Bash(ssh-add:*)",
      "Bash(ssh:*)",
      "Bash(git fetch:*)",
      "Read(//mnt/c/Users/ricar/Downloads/**)",
      "Bash(node --version)",
      "Bash(npm install:*)",
      "Bash(node generate-icons-cli.js:*)",
      "Bash(git commit:*)",
      "Bash(git ls-tree:*)",
      "WebFetch(domain:docs.n8n.io)",
      "WebFetch(domain:community.n8n.io)",
      "Bash(git log:*)",
      "WebFetch(domain:blog.mobiscroll.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:gist.github.com)",
      "Bash(N8N_API_URL=\"https://n8n-n8n-editor.neldoo.easypanel.host/\" N8N_API_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3ODUwMWYwNy1jMjJmLTQzNDctYmU0Mi0yMGIzYzkzNmZhYjAiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzYwOTM4MzM1fQ.gd1nK7lXDWZ2eqvwAc2-I39oQjFDfSVO0lcTe2PbvyM\" npx n8n-mcp)",
      "Bash(python3:*)",
      "Bash(/dev/null)",
      "mcp__n8n-mcp__n8n_health_check",
      "mcp__n8n-mcp__get_database_statistics",
      "mcp__n8n-mcp__n8n_list_workflows",
      "mcp__n8n-mcp__search_nodes",
      "mcp__n8n-mcp__get_node_documentation",
      "mcp__n8n-mcp__get_node_info",
      "mcp__n8n-mcp__search_templates",
      "Bash(ping:*)",
      "WebFetch(domain:langchain-ai.github.io)",
      "mcp__n8n-mcp__search_node_properties",
      "mcp__n8n-mcp__list_node_templates",
      "mcp__n8n-mcp__get_node_essentials",
      "WebFetch(domain:developers.google.com)",
      "mcp__n8n-mcp__list_nodes",
      "mcp__n8n-mcp__list_ai_tools",
      "WebFetch(domain:n8n.io)",
      "Bash(git revert:*)",
      "Bash(node --check:*)",
      "Bash(for file in js/*.js)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(rm:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enabledMcpjsonServers": [
    "n8n-mcp"
  ]
}
